/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as ProtectedSetupImport } from './routes/_protected/setup'
import { Route as ProtectedWorkspaceIndexImport } from './routes/_protected/workspace/index'
import { Route as ProtectedWorkspaceNamespaceRouteImport } from './routes/_protected/workspace/$namespace/route'
import { Route as ProtectedWorkspaceNamespaceIndexImport } from './routes/_protected/workspace/$namespace/index'
import { Route as ProtectedWorkspaceNamespaceTransactionsIndexImport } from './routes/_protected/workspace/$namespace/transactions/index'
import { Route as ProtectedWorkspaceNamespaceStocksIndexImport } from './routes/_protected/workspace/$namespace/stocks/index'
import { Route as ProtectedWorkspaceNamespaceSettingsIndexImport } from './routes/_protected/workspace/$namespace/settings/index'
import { Route as ProtectedWorkspaceNamespaceAccountsIndexImport } from './routes/_protected/workspace/$namespace/accounts/index'
import { Route as ProtectedWorkspaceNamespaceSettingsUsersIndexImport } from './routes/_protected/workspace/$namespace/settings/users/index'
import { Route as ProtectedWorkspaceNamespaceSettingsGeneralIndexImport } from './routes/_protected/workspace/$namespace/settings/general/index'
import { Route as ProtectedWorkspaceNamespaceSettingsCurrencyIndexImport } from './routes/_protected/workspace/$namespace/settings/currency/index'
import { Route as ProtectedWorkspaceNamespaceSettingsCategoriesIndexImport } from './routes/_protected/workspace/$namespace/settings/categories/index'
import { Route as ProtectedWorkspaceNamespaceAccountsAccountIdIndexImport } from './routes/_protected/workspace/$namespace/accounts/$accountId/index'

// Create Virtual Routes

const PublicIndexLazyImport = createFileRoute('/_public/')()
const PublicWhyLazyImport = createFileRoute('/_public/why')()
const PublicStackLazyImport = createFileRoute('/_public/stack')()
const PublicSignupLazyImport = createFileRoute('/_public/signup')()
const PublicPricingLazyImport = createFileRoute('/_public/pricing')()
const PublicLoginLazyImport = createFileRoute('/_public/login')()
const PublicFeaturesLazyImport = createFileRoute('/_public/features')()

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const PublicWhyLazyRoute = PublicWhyLazyImport.update({
  path: '/why',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() => import('./routes/_public/why.lazy').then((d) => d.Route))

const PublicStackLazyRoute = PublicStackLazyImport.update({
  path: '/stack',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() => import('./routes/_public/stack.lazy').then((d) => d.Route))

const PublicSignupLazyRoute = PublicSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./routes/_public/signup.lazy').then((d) => d.Route),
)

const PublicPricingLazyRoute = PublicPricingLazyImport.update({
  path: '/pricing',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./routes/_public/pricing.lazy').then((d) => d.Route),
)

const PublicLoginLazyRoute = PublicLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() => import('./routes/_public/login.lazy').then((d) => d.Route))

const PublicFeaturesLazyRoute = PublicFeaturesLazyImport.update({
  path: '/features',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./routes/_public/features.lazy').then((d) => d.Route),
)

const ProtectedSetupRoute = ProtectedSetupImport.update({
  path: '/setup',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedWorkspaceIndexRoute = ProtectedWorkspaceIndexImport.update({
  path: '/workspace/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedWorkspaceNamespaceRouteRoute =
  ProtectedWorkspaceNamespaceRouteImport.update({
    path: '/workspace/$namespace',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceIndexRoute =
  ProtectedWorkspaceNamespaceIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceTransactionsIndexRoute =
  ProtectedWorkspaceNamespaceTransactionsIndexImport.update({
    path: '/transactions/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceStocksIndexRoute =
  ProtectedWorkspaceNamespaceStocksIndexImport.update({
    path: '/stocks/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceSettingsIndexRoute =
  ProtectedWorkspaceNamespaceSettingsIndexImport.update({
    path: '/settings/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceAccountsIndexRoute =
  ProtectedWorkspaceNamespaceAccountsIndexImport.update({
    path: '/accounts/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceSettingsUsersIndexRoute =
  ProtectedWorkspaceNamespaceSettingsUsersIndexImport.update({
    path: '/settings/users/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceSettingsGeneralIndexRoute =
  ProtectedWorkspaceNamespaceSettingsGeneralIndexImport.update({
    path: '/settings/general/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceSettingsCurrencyIndexRoute =
  ProtectedWorkspaceNamespaceSettingsCurrencyIndexImport.update({
    path: '/settings/currency/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceSettingsCategoriesIndexRoute =
  ProtectedWorkspaceNamespaceSettingsCategoriesIndexImport.update({
    path: '/settings/categories/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

const ProtectedWorkspaceNamespaceAccountsAccountIdIndexRoute =
  ProtectedWorkspaceNamespaceAccountsAccountIdIndexImport.update({
    path: '/accounts/$accountId/',
    getParentRoute: () => ProtectedWorkspaceNamespaceRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/setup': {
      preLoaderRoute: typeof ProtectedSetupImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_public/features': {
      preLoaderRoute: typeof PublicFeaturesLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/login': {
      preLoaderRoute: typeof PublicLoginLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/pricing': {
      preLoaderRoute: typeof PublicPricingLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/signup': {
      preLoaderRoute: typeof PublicSignupLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/stack': {
      preLoaderRoute: typeof PublicStackLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/why': {
      preLoaderRoute: typeof PublicWhyLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/': {
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicRouteImport
    }
    '/_protected/workspace/$namespace': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/workspace/': {
      preLoaderRoute: typeof ProtectedWorkspaceIndexImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/workspace/$namespace/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/accounts/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceAccountsIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/settings/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceSettingsIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/stocks/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceStocksIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/transactions/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceTransactionsIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/accounts/$accountId/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceAccountsAccountIdIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/settings/categories/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceSettingsCategoriesIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/settings/currency/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceSettingsCurrencyIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/settings/general/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceSettingsGeneralIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
    '/_protected/workspace/$namespace/settings/users/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceSettingsUsersIndexImport
      parentRoute: typeof ProtectedWorkspaceNamespaceRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ProtectedRouteRoute.addChildren([
    ProtectedSetupRoute,
    ProtectedWorkspaceNamespaceRouteRoute.addChildren([
      ProtectedWorkspaceNamespaceIndexRoute,
      ProtectedWorkspaceNamespaceAccountsIndexRoute,
      ProtectedWorkspaceNamespaceSettingsIndexRoute,
      ProtectedWorkspaceNamespaceStocksIndexRoute,
      ProtectedWorkspaceNamespaceTransactionsIndexRoute,
      ProtectedWorkspaceNamespaceAccountsAccountIdIndexRoute,
      ProtectedWorkspaceNamespaceSettingsCategoriesIndexRoute,
      ProtectedWorkspaceNamespaceSettingsCurrencyIndexRoute,
      ProtectedWorkspaceNamespaceSettingsGeneralIndexRoute,
      ProtectedWorkspaceNamespaceSettingsUsersIndexRoute,
    ]),
    ProtectedWorkspaceIndexRoute,
  ]),
  PublicRouteRoute.addChildren([
    PublicFeaturesLazyRoute,
    PublicLoginLazyRoute,
    PublicPricingLazyRoute,
    PublicSignupLazyRoute,
    PublicStackLazyRoute,
    PublicWhyLazyRoute,
    PublicIndexLazyRoute,
  ]),
])

/* prettier-ignore-end */
